# os: linux and sudo: false is assumed, which means it is using container-based Ubuntu 12.04
language: python
cache: pip
# build matrix: different python and pandoc versions
python:
  - "2.7"
  - "3.3"
  - "3.4"
  - "3.5"
  - "3.5-dev" # 3.5 development branch
  - "3.6-dev" # 3.6 development branch
  - "nightly" # currently points to 3.7-dev
  # pypy (version info from [Changelogs â€” PyPy documentation](http://doc.pypy.org/en/latest/index-of-whatsnew.html))
  - "pypy"  # PyPy2.7 5.3.1 (CPython 2.7 compatible)
  - "pypy3" # PyPy3 2.4.0 (CPython 3.2 compatible)
# https://groups.google.com/forum/?fromgroups#!topic/pandoc-discuss/uGASAhRydfI
env:
  - pandocVersion=1.17.2
  - pandocVersion=1.18
  - pandocVersion=latest
matrix:
  allow_failures:
    - python: "3.5-dev"
    - python: "3.6-dev"
    - python: "nightly"
    - python: "pypy3"
  fast_finish: true
# command to install dependencies
before_install:
  - |
    if [[ $pandocVersion == "latest" ]]; then
      url="https://github.com/jgm/pandoc/releases/latest"
    else
      url="https://github.com/jgm/pandoc/releases/tag/$pandocVersion"
    fi
    path=$(curl -L $url | grep -o '/jgm/pandoc/releases/download/.*-amd64.deb')
    downloadUrl="https://github.com$path"
    file=${path##*/}
  - wget $downloadUrl &&
    sudo dpkg -i $file
  - pip install -r requirements.txt
  - pip install -r tests/requirements.txt
  - pasteurize -wnj 8 .
install:
  - python setup.py install
before_script: 
# command to run tests
script:
  - py.test -vv --cov=panflute tests
  # prepare filters for panflute
  - mkdir -p $HOME/.pandoc/filters
  - find . -iname '*.py' -print0 | xargs -0 -i -n1 -P4 cp {} $HOME/.pandoc/filters/
  # running all available .md files through panflute
  - find . -iname '*.md' -print0 | xargs -0 -i -n1 -P4 pandoc -t native -F panflute {}
deploy:
  provider: pypi
  user: sergiocorreia
  password: $pypi_password
  skip_cleanup: true
  on:
    python: "3.5"
    condition: $pandocVersion = latest
